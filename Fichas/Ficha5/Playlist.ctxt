#BlueJ class context
comment0.params=f
comment0.target=Playlist(java.util.List)
comment1.params=
comment1.target=Playlist()
comment10.params=f
comment10.target=void\ addFaixa(Faixa)
comment11.params=m
comment11.target=void\ removeFaixa(Faixa)
comment12.params=faixas
comment12.target=void\ adicionar(java.util.List)
comment13.params=faixas
comment13.target=void\ adicionaF(java.util.List)
comment14.params=f
comment14.target=int\ classificacaoSuperiorF(Faixa)
comment15.params=f
comment15.target=int\ classificaoSuperior(Faixa)
comment16.params=d
comment16.target=boolean\ duracaoSuperior(double)
comment17.params=d
comment17.target=boolean\ duracaoSuperior2(double)
comment18.params=d
comment18.target=boolean\ duracaoSuperiorF(double)
comment19.params=n
comment19.target=java.util.List\ getCopiaFaixas(int)
comment2.params=p
comment2.target=Playlist(Playlist)
comment20.params=n
comment20.target=java.util.List\ getCopiaFaixasF(int)
comment21.params=
comment21.target=double\ duracaoTotal()
comment22.params=
comment22.target=double\ duracaoTotalF()
comment23.params=
comment23.target=Playlist\ clone()
comment23.text=\r\n\ \ public\ void\ removeFaixas(String\ autor){\r\n\ \ \ \ Collection<Faixa>\ col\ \=\ faixas.stream().map((Faixa\ f)->(f.getAutor().equals(autor))).collect(Collectors.toLisr());\r\n\ \ \ \ \r\n\ \ \ \ faixas.removeAll(col);\r\n\ \ \ \ }\r\n
comment3.params=
comment3.target=java.util.List\ getFaixas()
comment4.params=
comment4.target=java.util.List\ getFaixas2()
comment5.params=
comment5.target=java.util.List\ getFaixas3()
comment6.params=
comment6.target=java.util.List\ getFaixas4()
comment7.params=
comment7.target=java.util.List\ getFaixas5()
comment8.params=faixas
comment8.target=void\ setFaixas(java.util.List)
comment9.params=
comment9.target=int\ numFaixas()
numComments=24
